#!/bin/bash

export PATH="$HOME/.bun/bin:$PATH"

# Lint and format only staged JavaScript and TypeScript files, then run tests using Bun.

# Stage 1: ESLint checks on staged JavaScript and TypeScript files with autofix
echo "Running ESLint on staged files..."

# Get all staged .js and .ts files
staged_files=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|ts)$')

if [ -n "$staged_files" ]; then
    # Run ESLint with --fix on all staged files at once
    node_modules/.bin/eslint --fix $staged_files

    # Check if ESLint failed
    if [ $? -ne 0 ]; then
        echo "ESLint failed. Please fix the remaining errors and try again."
        echo "You can manually fix issues by running: npm run eslint"
        exit 1
    else
        # Stage any autofixed files
        git add $staged_files
    fi
else
    echo "No staged JavaScript or TypeScript files to lint."
fi

echo "ESLint passed or autofixes applied."

# Stage 2: Prettier auto-formatting for staged files
echo "Running Prettier formatting..."

# Prettier formats the files that are staged for commit (added, copied, modified, renamed)
prettier $(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g') --write --ignore-unknown

# Update the Git index to include the formatted files
git update-index --again

# Stage 3: Run tests using Bun
echo "Running tests with Bun..."

bun test

# Check if tests failed
if [ $? -ne 0 ]; then
    echo "Tests failed. Please fix the issues and try again."
    exit 1 # Exit with failure status if tests fail
fi

echo "All tests passed successfully. You're good to go!"